@using InsuranceFinalProject.ViewModel
@model UserCarMotorModel

@{
    ViewBag.Title = "RegCar";
}

    <div class="contact-body">
        <div class="contact-heading">
            <h3>Car details</h3>
        </div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group" style="display: none">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control input-disabled" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="display: none">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control input-disabled" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="display: none">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control input-disabled" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="display: none">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CarReg, htmlAttributes: new { @class = "control-label" })
                    <div class="contact-input">
                        @Html.EditorFor(model => model.CarReg, new { htmlAttributes = new { @class = "form-control", @placeholder = "Registration number" } })
                        @Html.ValidationMessageFor(model => model.CarReg, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CarValue, htmlAttributes: new { @class = "control-label" })
                    <div class="contact-input">
                        @Html.EditorFor(model => model.CarValue, new { htmlAttributes = new { @class = "form-control", @placeholder = "Listed value" } })
                        @Html.ValidationMessageFor(model => model.CarValue, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ModeofUse, htmlAttributes: new { @class = "control-label" })
                    <div class="contact-input">
                        @Html.DropDownListFor(model => model.ModeofUse,
                            new SelectList(Enum.GetValues(typeof(Mode))),
                            "Select Mode of use",
                            new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ModeofUse, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="contact-submit">
                        <input type="submit" value="Create" class="input-button" />
                    </div>
                </div>
            </div>
        }
        </div>

        <div class="home-link-container">
            <div class="home-link">
                @Html.ActionLink("Home", "Index", "Home", null, new { @class = "nav-link" })
            </div>
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
