@model InsuranceFinalProject.ViewModel.UserView

    <div class="contact-body">
        <div class="contact-heading">
            <h3>Update your details</h3>
        </div>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.UserId)

                <div class="form-group">
                    <div class="contact-input">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "First name" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="contact-input">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last name" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="contact-input">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Username" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="contact-input">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="contact-input">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirm password" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="contact-submit">
                        <input type="submit" value="Update" class="input-button" />
                    </div>
                </div>
            </div>
        }
        </div>

        @if (ViewBag.successMsg != null)
        {
            <div>
                <h3>@ViewBag.successMsg</h3>
                @Html.ActionLink("My Details", "MyDetails")

            </div>
        }

        <div class="home-link-container">
            <div class="home-link">
                @Html.ActionLink("Home", "Index", "Home", null, new { @class = "nav-link" })
            </div>
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
